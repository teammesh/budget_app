/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/": {
    get: {
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/activities": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.activities.id"];
          created_at?: parameters["rowFilter.activities.created_at"];
          group_id?: parameters["rowFilter.activities.group_id"];
          profile_id?: parameters["rowFilter.activities.profile_id"];
          table_name?: parameters["rowFilter.activities.table_name"];
          table_item_id?: parameters["rowFilter.activities.table_item_id"];
          type?: parameters["rowFilter.activities.type"];
          to_profile_id?: parameters["rowFilter.activities.to_profile_id"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["activities"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** activities */
          activities?: definitions["activities"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.activities.id"];
          created_at?: parameters["rowFilter.activities.created_at"];
          group_id?: parameters["rowFilter.activities.group_id"];
          profile_id?: parameters["rowFilter.activities.profile_id"];
          table_name?: parameters["rowFilter.activities.table_name"];
          table_item_id?: parameters["rowFilter.activities.table_item_id"];
          type?: parameters["rowFilter.activities.type"];
          to_profile_id?: parameters["rowFilter.activities.to_profile_id"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.activities.id"];
          created_at?: parameters["rowFilter.activities.created_at"];
          group_id?: parameters["rowFilter.activities.group_id"];
          profile_id?: parameters["rowFilter.activities.profile_id"];
          table_name?: parameters["rowFilter.activities.table_name"];
          table_item_id?: parameters["rowFilter.activities.table_item_id"];
          type?: parameters["rowFilter.activities.type"];
          to_profile_id?: parameters["rowFilter.activities.to_profile_id"];
        };
        body: {
          /** activities */
          activities?: definitions["activities"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/balances": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.balances.id"];
          created_at?: parameters["rowFilter.balances.created_at"];
          group_id?: parameters["rowFilter.balances.group_id"];
          from_profile_id?: parameters["rowFilter.balances.from_profile_id"];
          to_profile_id?: parameters["rowFilter.balances.to_profile_id"];
          amount?: parameters["rowFilter.balances.amount"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["balances"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** balances */
          balances?: definitions["balances"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.balances.id"];
          created_at?: parameters["rowFilter.balances.created_at"];
          group_id?: parameters["rowFilter.balances.group_id"];
          from_profile_id?: parameters["rowFilter.balances.from_profile_id"];
          to_profile_id?: parameters["rowFilter.balances.to_profile_id"];
          amount?: parameters["rowFilter.balances.amount"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.balances.id"];
          created_at?: parameters["rowFilter.balances.created_at"];
          group_id?: parameters["rowFilter.balances.group_id"];
          from_profile_id?: parameters["rowFilter.balances.from_profile_id"];
          to_profile_id?: parameters["rowFilter.balances.to_profile_id"];
          amount?: parameters["rowFilter.balances.amount"];
        };
        body: {
          /** balances */
          balances?: definitions["balances"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/profiles_groups": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.profiles_groups.id"];
          created_at?: parameters["rowFilter.profiles_groups.created_at"];
          profile_id?: parameters["rowFilter.profiles_groups.profile_id"];
          group_id?: parameters["rowFilter.profiles_groups.group_id"];
          amount_paid_transactions?: parameters["rowFilter.profiles_groups.amount_paid_transactions"];
          amount_paid_users?: parameters["rowFilter.profiles_groups.amount_paid_users"];
          split_amount?: parameters["rowFilter.profiles_groups.split_amount"];
          amount_owed?: parameters["rowFilter.profiles_groups.amount_owed"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["profiles_groups"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** profiles_groups */
          profiles_groups?: definitions["profiles_groups"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.profiles_groups.id"];
          created_at?: parameters["rowFilter.profiles_groups.created_at"];
          profile_id?: parameters["rowFilter.profiles_groups.profile_id"];
          group_id?: parameters["rowFilter.profiles_groups.group_id"];
          amount_paid_transactions?: parameters["rowFilter.profiles_groups.amount_paid_transactions"];
          amount_paid_users?: parameters["rowFilter.profiles_groups.amount_paid_users"];
          split_amount?: parameters["rowFilter.profiles_groups.split_amount"];
          amount_owed?: parameters["rowFilter.profiles_groups.amount_owed"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.profiles_groups.id"];
          created_at?: parameters["rowFilter.profiles_groups.created_at"];
          profile_id?: parameters["rowFilter.profiles_groups.profile_id"];
          group_id?: parameters["rowFilter.profiles_groups.group_id"];
          amount_paid_transactions?: parameters["rowFilter.profiles_groups.amount_paid_transactions"];
          amount_paid_users?: parameters["rowFilter.profiles_groups.amount_paid_users"];
          split_amount?: parameters["rowFilter.profiles_groups.split_amount"];
          amount_owed?: parameters["rowFilter.profiles_groups.amount_owed"];
        };
        body: {
          /** profiles_groups */
          profiles_groups?: definitions["profiles_groups"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/plaid_items": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.plaid_items.id"];
          created_at?: parameters["rowFilter.plaid_items.created_at"];
          item_id?: parameters["rowFilter.plaid_items.item_id"];
          access_token?: parameters["rowFilter.plaid_items.access_token"];
          profile_id?: parameters["rowFilter.plaid_items.profile_id"];
          account_id?: parameters["rowFilter.plaid_items.account_id"];
          name?: parameters["rowFilter.plaid_items.name"];
          last_four_digits?: parameters["rowFilter.plaid_items.last_four_digits"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["plaid_items"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** plaid_items */
          plaid_items?: definitions["plaid_items"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.plaid_items.id"];
          created_at?: parameters["rowFilter.plaid_items.created_at"];
          item_id?: parameters["rowFilter.plaid_items.item_id"];
          access_token?: parameters["rowFilter.plaid_items.access_token"];
          profile_id?: parameters["rowFilter.plaid_items.profile_id"];
          account_id?: parameters["rowFilter.plaid_items.account_id"];
          name?: parameters["rowFilter.plaid_items.name"];
          last_four_digits?: parameters["rowFilter.plaid_items.last_four_digits"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.plaid_items.id"];
          created_at?: parameters["rowFilter.plaid_items.created_at"];
          item_id?: parameters["rowFilter.plaid_items.item_id"];
          access_token?: parameters["rowFilter.plaid_items.access_token"];
          profile_id?: parameters["rowFilter.plaid_items.profile_id"];
          account_id?: parameters["rowFilter.plaid_items.account_id"];
          name?: parameters["rowFilter.plaid_items.name"];
          last_four_digits?: parameters["rowFilter.plaid_items.last_four_digits"];
        };
        body: {
          /** plaid_items */
          plaid_items?: definitions["plaid_items"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/groups": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.groups.id"];
          created_at?: parameters["rowFilter.groups.created_at"];
          name?: parameters["rowFilter.groups.name"];
          avatar_url?: parameters["rowFilter.groups.avatar_url"];
          is_deleted?: parameters["rowFilter.groups.is_deleted"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["groups"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** groups */
          groups?: definitions["groups"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.groups.id"];
          created_at?: parameters["rowFilter.groups.created_at"];
          name?: parameters["rowFilter.groups.name"];
          avatar_url?: parameters["rowFilter.groups.avatar_url"];
          is_deleted?: parameters["rowFilter.groups.is_deleted"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.groups.id"];
          created_at?: parameters["rowFilter.groups.created_at"];
          name?: parameters["rowFilter.groups.name"];
          avatar_url?: parameters["rowFilter.groups.avatar_url"];
          is_deleted?: parameters["rowFilter.groups.is_deleted"];
        };
        body: {
          /** groups */
          groups?: definitions["groups"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/payments": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.payments.id"];
          created_at?: parameters["rowFilter.payments.created_at"];
          group_id?: parameters["rowFilter.payments.group_id"];
          amount?: parameters["rowFilter.payments.amount"];
          from_profile_id?: parameters["rowFilter.payments.from_profile_id"];
          to_profile_id?: parameters["rowFilter.payments.to_profile_id"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["payments"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** payments */
          payments?: definitions["payments"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.payments.id"];
          created_at?: parameters["rowFilter.payments.created_at"];
          group_id?: parameters["rowFilter.payments.group_id"];
          amount?: parameters["rowFilter.payments.amount"];
          from_profile_id?: parameters["rowFilter.payments.from_profile_id"];
          to_profile_id?: parameters["rowFilter.payments.to_profile_id"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.payments.id"];
          created_at?: parameters["rowFilter.payments.created_at"];
          group_id?: parameters["rowFilter.payments.group_id"];
          amount?: parameters["rowFilter.payments.amount"];
          from_profile_id?: parameters["rowFilter.payments.from_profile_id"];
          to_profile_id?: parameters["rowFilter.payments.to_profile_id"];
        };
        body: {
          /** payments */
          payments?: definitions["payments"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/shared_transactions": {
    get: {
      parameters: {
        query: {
          created_at?: parameters["rowFilter.shared_transactions.created_at"];
          group_id?: parameters["rowFilter.shared_transactions.group_id"];
          charged_to?: parameters["rowFilter.shared_transactions.charged_to"];
          amount?: parameters["rowFilter.shared_transactions.amount"];
          authorized_date?: parameters["rowFilter.shared_transactions.authorized_date"];
          category?: parameters["rowFilter.shared_transactions.category"];
          category_id?: parameters["rowFilter.shared_transactions.category_id"];
          date?: parameters["rowFilter.shared_transactions.date"];
          merchant_name?: parameters["rowFilter.shared_transactions.merchant_name"];
          name?: parameters["rowFilter.shared_transactions.name"];
          payment_channel?: parameters["rowFilter.shared_transactions.payment_channel"];
          payment_meta?: parameters["rowFilter.shared_transactions.payment_meta"];
          pending?: parameters["rowFilter.shared_transactions.pending"];
          transaction_id?: parameters["rowFilter.shared_transactions.transaction_id"];
          transaction_type?: parameters["rowFilter.shared_transactions.transaction_type"];
          account_id?: parameters["rowFilter.shared_transactions.account_id"];
          location?: parameters["rowFilter.shared_transactions.location"];
          id?: parameters["rowFilter.shared_transactions.id"];
          split_amounts?: parameters["rowFilter.shared_transactions.split_amounts"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["shared_transactions"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** shared_transactions */
          shared_transactions?: definitions["shared_transactions"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          created_at?: parameters["rowFilter.shared_transactions.created_at"];
          group_id?: parameters["rowFilter.shared_transactions.group_id"];
          charged_to?: parameters["rowFilter.shared_transactions.charged_to"];
          amount?: parameters["rowFilter.shared_transactions.amount"];
          authorized_date?: parameters["rowFilter.shared_transactions.authorized_date"];
          category?: parameters["rowFilter.shared_transactions.category"];
          category_id?: parameters["rowFilter.shared_transactions.category_id"];
          date?: parameters["rowFilter.shared_transactions.date"];
          merchant_name?: parameters["rowFilter.shared_transactions.merchant_name"];
          name?: parameters["rowFilter.shared_transactions.name"];
          payment_channel?: parameters["rowFilter.shared_transactions.payment_channel"];
          payment_meta?: parameters["rowFilter.shared_transactions.payment_meta"];
          pending?: parameters["rowFilter.shared_transactions.pending"];
          transaction_id?: parameters["rowFilter.shared_transactions.transaction_id"];
          transaction_type?: parameters["rowFilter.shared_transactions.transaction_type"];
          account_id?: parameters["rowFilter.shared_transactions.account_id"];
          location?: parameters["rowFilter.shared_transactions.location"];
          id?: parameters["rowFilter.shared_transactions.id"];
          split_amounts?: parameters["rowFilter.shared_transactions.split_amounts"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          created_at?: parameters["rowFilter.shared_transactions.created_at"];
          group_id?: parameters["rowFilter.shared_transactions.group_id"];
          charged_to?: parameters["rowFilter.shared_transactions.charged_to"];
          amount?: parameters["rowFilter.shared_transactions.amount"];
          authorized_date?: parameters["rowFilter.shared_transactions.authorized_date"];
          category?: parameters["rowFilter.shared_transactions.category"];
          category_id?: parameters["rowFilter.shared_transactions.category_id"];
          date?: parameters["rowFilter.shared_transactions.date"];
          merchant_name?: parameters["rowFilter.shared_transactions.merchant_name"];
          name?: parameters["rowFilter.shared_transactions.name"];
          payment_channel?: parameters["rowFilter.shared_transactions.payment_channel"];
          payment_meta?: parameters["rowFilter.shared_transactions.payment_meta"];
          pending?: parameters["rowFilter.shared_transactions.pending"];
          transaction_id?: parameters["rowFilter.shared_transactions.transaction_id"];
          transaction_type?: parameters["rowFilter.shared_transactions.transaction_type"];
          account_id?: parameters["rowFilter.shared_transactions.account_id"];
          location?: parameters["rowFilter.shared_transactions.location"];
          id?: parameters["rowFilter.shared_transactions.id"];
          split_amounts?: parameters["rowFilter.shared_transactions.split_amounts"];
        };
        body: {
          /** shared_transactions */
          shared_transactions?: definitions["shared_transactions"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/profiles": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.profiles.id"];
          updated_at?: parameters["rowFilter.profiles.updated_at"];
          username?: parameters["rowFilter.profiles.username"];
          avatar_url?: parameters["rowFilter.profiles.avatar_url"];
          website?: parameters["rowFilter.profiles.website"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["profiles"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** profiles */
          profiles?: definitions["profiles"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.profiles.id"];
          updated_at?: parameters["rowFilter.profiles.updated_at"];
          username?: parameters["rowFilter.profiles.username"];
          avatar_url?: parameters["rowFilter.profiles.avatar_url"];
          website?: parameters["rowFilter.profiles.website"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.profiles.id"];
          updated_at?: parameters["rowFilter.profiles.updated_at"];
          username?: parameters["rowFilter.profiles.username"];
          avatar_url?: parameters["rowFilter.profiles.avatar_url"];
          website?: parameters["rowFilter.profiles.website"];
        };
        body: {
          /** profiles */
          profiles?: definitions["profiles"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/rpc/get_user_amount": {
    post: {
      parameters: {
        body: {
          args: {
            /** Format: uuid */
            p_id: string;
            /** Format: uuid */
            g_id: string;
          };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/rpc/get_amount_per_user": {
    post: {
      parameters: {
        body: {
          args: {
            /** Format: double precision */
            total: number;
            /** Format: integer */
            users: number;
          };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/rpc/calculate_amounts": {
    post: {
      parameters: {
        body: {
          args: {
            /** Format: uuid */
            g_id: string;
          };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/rpc/generate_amounts": {
    post: {
      parameters: {
        body: {
          args: {
            /** Format: uuid */
            g_id: string;
          };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/rpc/get_transaction_total": {
    post: {
      parameters: {
        body: {
          args: {
            /** Format: uuid */
            g_id: string;
          };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
}

export interface definitions {
  activities: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `groups.id`.<fk table='groups' column='id'/>
     */
    group_id?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `profiles.id`.<fk table='profiles' column='id'/>
     */
    profile_id?: string;
    /** Format: text */
    table_name?: string;
    /** Format: text */
    table_item_id?: string;
    /** Format: text */
    type?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `profiles.id`.<fk table='profiles' column='id'/>
     */
    to_profile_id?: string;
  };
  balances: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `groups.id`.<fk table='groups' column='id'/>
     */
    group_id?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `profiles.id`.<fk table='profiles' column='id'/>
     */
    from_profile_id?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `profiles.id`.<fk table='profiles' column='id'/>
     */
    to_profile_id?: string;
    /** Format: double precision */
    amount?: number;
  };
  profiles_groups: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `profiles.id`.<fk table='profiles' column='id'/>
     */
    profile_id?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `groups.id`.<fk table='groups' column='id'/>
     */
    group_id?: string;
    /** Format: double precision */
    amount_paid_transactions: number;
    /** Format: double precision */
    amount_paid_users: number;
    /** Format: double precision */
    split_amount: number;
    /** Format: double precision */
    amount_owed: number;
  };
  plaid_items: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /** Format: text */
    item_id?: string;
    /** Format: text */
    access_token?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `profiles.id`.<fk table='profiles' column='id'/>
     */
    profile_id: string;
    /** Format: text */
    account_id?: string;
    /** Format: text */
    name?: string;
    /** Format: smallint */
    last_four_digits?: number;
  };
  groups: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * @default extensions.uuid_generate_v4()
     */
    id: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /** Format: text */
    name?: string;
    /** Format: text */
    avatar_url?: string;
    /**
     * Format: boolean
     * @default false
     */
    is_deleted: boolean;
  };
  payments: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `groups.id`.<fk table='groups' column='id'/>
     */
    group_id?: string;
    /** Format: double precision */
    amount?: number;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `profiles.id`.<fk table='profiles' column='id'/>
     */
    from_profile_id: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `profiles.id`.<fk table='profiles' column='id'/>
     */
    to_profile_id: string;
  };
  shared_transactions: {
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `groups.id`.<fk table='groups' column='id'/>
     */
    group_id?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `profiles.id`.<fk table='profiles' column='id'/>
     */
    charged_to?: string;
    /** Format: double precision */
    amount: number;
    /** Format: character varying */
    authorized_date?: string;
    /** Format: ARRAY */
    category?: unknown[];
    /** Format: character varying */
    category_id?: string;
    /** Format: character varying */
    date?: string;
    /** Format: text */
    merchant_name?: string;
    /** Format: text */
    name?: string;
    /** Format: character varying */
    payment_channel?: string;
    /** Format: jsonb */
    payment_meta?: unknown;
    /** Format: boolean */
    pending?: boolean;
    /** Format: text */
    transaction_id?: string;
    /** Format: character varying */
    transaction_type?: string;
    /** Format: character varying */
    account_id?: string;
    /** Format: jsonb */
    location?: unknown;
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * @default extensions.uuid_generate_v4()
     */
    id: string;
    /** Format: jsonb */
    split_amounts?: unknown;
  };
  profiles: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    /** Format: timestamp with time zone */
    updated_at?: string;
    /** Format: text */
    username?: string;
    /** Format: text */
    avatar_url?: string;
    /** Format: text */
    website?: string;
  };
}

export interface parameters {
  /**
   * @description Preference
   * @enum {string}
   */
  preferParams: "params=single-object";
  /**
   * @description Preference
   * @enum {string}
   */
  preferReturn: "return=representation" | "return=minimal" | "return=none";
  /**
   * @description Preference
   * @enum {string}
   */
  preferCount: "count=none";
  /** @description Filtering Columns */
  select: string;
  /** @description On Conflict */
  on_conflict: string;
  /** @description Ordering */
  order: string;
  /** @description Limiting and Pagination */
  range: string;
  /**
   * @description Limiting and Pagination
   * @default items
   */
  rangeUnit: string;
  /** @description Limiting and Pagination */
  offset: string;
  /** @description Limiting and Pagination */
  limit: string;
  /** @description activities */
  "body.activities": definitions["activities"];
  /** Format: bigint */
  "rowFilter.activities.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.activities.created_at": string;
  /** Format: uuid */
  "rowFilter.activities.group_id": string;
  /** Format: uuid */
  "rowFilter.activities.profile_id": string;
  /** Format: text */
  "rowFilter.activities.table_name": string;
  /** Format: text */
  "rowFilter.activities.table_item_id": string;
  /** Format: text */
  "rowFilter.activities.type": string;
  /** Format: uuid */
  "rowFilter.activities.to_profile_id": string;
  /** @description balances */
  "body.balances": definitions["balances"];
  /** Format: bigint */
  "rowFilter.balances.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.balances.created_at": string;
  /** Format: uuid */
  "rowFilter.balances.group_id": string;
  /** Format: uuid */
  "rowFilter.balances.from_profile_id": string;
  /** Format: uuid */
  "rowFilter.balances.to_profile_id": string;
  /** Format: double precision */
  "rowFilter.balances.amount": string;
  /** @description profiles_groups */
  "body.profiles_groups": definitions["profiles_groups"];
  /** Format: bigint */
  "rowFilter.profiles_groups.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.profiles_groups.created_at": string;
  /** Format: uuid */
  "rowFilter.profiles_groups.profile_id": string;
  /** Format: uuid */
  "rowFilter.profiles_groups.group_id": string;
  /** Format: double precision */
  "rowFilter.profiles_groups.amount_paid_transactions": string;
  /** Format: double precision */
  "rowFilter.profiles_groups.amount_paid_users": string;
  /** Format: double precision */
  "rowFilter.profiles_groups.split_amount": string;
  /** Format: double precision */
  "rowFilter.profiles_groups.amount_owed": string;
  /** @description plaid_items */
  "body.plaid_items": definitions["plaid_items"];
  /** Format: bigint */
  "rowFilter.plaid_items.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.plaid_items.created_at": string;
  /** Format: text */
  "rowFilter.plaid_items.item_id": string;
  /** Format: text */
  "rowFilter.plaid_items.access_token": string;
  /** Format: uuid */
  "rowFilter.plaid_items.profile_id": string;
  /** Format: text */
  "rowFilter.plaid_items.account_id": string;
  /** Format: text */
  "rowFilter.plaid_items.name": string;
  /** Format: smallint */
  "rowFilter.plaid_items.last_four_digits": string;
  /** @description groups */
  "body.groups": definitions["groups"];
  /** Format: uuid */
  "rowFilter.groups.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.groups.created_at": string;
  /** Format: text */
  "rowFilter.groups.name": string;
  /** Format: text */
  "rowFilter.groups.avatar_url": string;
  /** Format: boolean */
  "rowFilter.groups.is_deleted": string;
  /** @description payments */
  "body.payments": definitions["payments"];
  /** Format: bigint */
  "rowFilter.payments.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.payments.created_at": string;
  /** Format: uuid */
  "rowFilter.payments.group_id": string;
  /** Format: double precision */
  "rowFilter.payments.amount": string;
  /** Format: uuid */
  "rowFilter.payments.from_profile_id": string;
  /** Format: uuid */
  "rowFilter.payments.to_profile_id": string;
  /** @description shared_transactions */
  "body.shared_transactions": definitions["shared_transactions"];
  /** Format: timestamp with time zone */
  "rowFilter.shared_transactions.created_at": string;
  /** Format: uuid */
  "rowFilter.shared_transactions.group_id": string;
  /** Format: uuid */
  "rowFilter.shared_transactions.charged_to": string;
  /** Format: double precision */
  "rowFilter.shared_transactions.amount": string;
  /** Format: character varying */
  "rowFilter.shared_transactions.authorized_date": string;
  /** Format: ARRAY */
  "rowFilter.shared_transactions.category": string;
  /** Format: character varying */
  "rowFilter.shared_transactions.category_id": string;
  /** Format: character varying */
  "rowFilter.shared_transactions.date": string;
  /** Format: text */
  "rowFilter.shared_transactions.merchant_name": string;
  /** Format: text */
  "rowFilter.shared_transactions.name": string;
  /** Format: character varying */
  "rowFilter.shared_transactions.payment_channel": string;
  /** Format: jsonb */
  "rowFilter.shared_transactions.payment_meta": string;
  /** Format: boolean */
  "rowFilter.shared_transactions.pending": string;
  /** Format: text */
  "rowFilter.shared_transactions.transaction_id": string;
  /** Format: character varying */
  "rowFilter.shared_transactions.transaction_type": string;
  /** Format: character varying */
  "rowFilter.shared_transactions.account_id": string;
  /** Format: jsonb */
  "rowFilter.shared_transactions.location": string;
  /** Format: uuid */
  "rowFilter.shared_transactions.id": string;
  /** Format: jsonb */
  "rowFilter.shared_transactions.split_amounts": string;
  /** @description profiles */
  "body.profiles": definitions["profiles"];
  /** Format: uuid */
  "rowFilter.profiles.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.profiles.updated_at": string;
  /** Format: text */
  "rowFilter.profiles.username": string;
  /** Format: text */
  "rowFilter.profiles.avatar_url": string;
  /** Format: text */
  "rowFilter.profiles.website": string;
}

export interface operations {}

export interface external {}
